ONLY_PRECEDING_WORDS = False


"""
first five are blacklisted as they appear so many times they tend to "distract" the classifiers
"""
REFERENCES_BLACKLIST = ["ברכות",
                        "חולין",
                        "פסחים",
                        "לאוין",
                        "עירובין",
                        "שו\"ת",
                        "הי\"א",
                        "סי\"ב",
                        "פט\"ו",
                        "בד\"ה",
                        "סי\"ד",
                        "ני\"ז",
                        "וש\"נ",
                        "סי\"ג",
                        "פי\"ד",
                        "הכ\"ו",
                        "ומיהו",
                        "וסי\'",
                        "הדשן",
                        "מהדו\'",
                        "סי\"א",
                        "דאמר",
                        "דעים",
                        "בחי\'",
                        "הכ\"ה",
                        "דאמרינן",
                        "ההוא",
                        "פי\"ג",
                        "נכ\"ו",
                        "פי\"ב",
                        "ני\"ב",
                        "הכ\"ד",
                        "הכ\"א",
                        "סעיף",
                        "הכ\"ב",
                        "וד\"ה",
                        "הכ\"ג",
                        "פי\"א",
                        "הי\"ח",
                        "הי\"ט",
                        "הי\"ז",
                        "הט\"ו",
                        "ומ\"ש",
                        "הי\"ב",
                        "עבה\"ק",
                        "הי\"ג",
                        "הי\"ד",
                        "הט\"ז",
                        "קיז:",
                        "דפו\'",
                        "חו\"מ",
                        "קיד",
                        "קנא.",
                        "קטו",
                        "עיי\'",
                        "ני\"ט",
                        "תורת",
                        "קמז.",
                        "נט\"ו",
                        "וכתב",
                        "סוע\"ב",
                        "מאכ\"א",
                        "סוע\"א",
                        "דבור",
                        "וקצר",
                        "קיא.",
                        "קיג.",
                        "קיב.",
                        "קיב:",
                        "קיא:",
                        "קיד.",
                        "פי\"ז",
                        'ראשון',
                        'סימן',
                        'דיבור',
                        'סו"ס',
                        "מתני'",
                        'סוד"ה',
                        'תוה"א',
                        'דפוס',
                        'ולענין',
                        "תוס'",
                        'הלכות',
                        'רבינו',
                        "גרסי'",
                        'תוד"ה',
                        'נתיב',
                        'סוס"י',
                        'לעיל',
                        'הלכה',
                        'תשובות',
                        'גרסינן',
                        'בהשגות',
                        'ירושלמי',
                        'הגהות',
                        'פסקי',
                        'תפלה',
                        'יו"ט',
                        'דתנן',
                        'תוספתא',
                        "תשו'",
                        'קטו.',
                        'קטז:',
                        'קסח.',
                        'קיז.',
                        'קלו.',
                        "בגמ'",
                        'קיח.',
                        'מועד',
                        'השלם',
                        'בסופו',
                        'כתוב',
                        'בגליון',
                        'תרומת',
                        'יהודה',
                        'איסו"ב',
                        'תמים',
                        'רש"י',
                        'והלכתא'
                        ]


class Reference():
    def __init__(self, index, label, bag_of_words, bag_size):
        self.index = index
        self.label = label
        self.bag_of_words = bag_of_words
        self.bag_size = bag_size
        self.prediction = None
    def get_bag_of_words(self, size=None):
        if size == None:
            size = self.bag_size
        if ONLY_PRECEDING_WORDS:
            return self.bag_of_words[int(len(self.bag_of_words) / 2) - size: int(len(self.bag_of_words) / 2)]
        return self.bag_of_words[int(len(self.bag_of_words) / 2) - size: int(len(self.bag_of_words) / 2) + size]

